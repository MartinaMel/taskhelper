// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package uk.co.vurt.taskhelper.server.domain.definition;

import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import org.springframework.transaction.annotation.Transactional;
import uk.co.vurt.taskhelper.server.domain.definition.AutoTaskDefinition;

privileged aspect AutoTaskDefinition_Roo_Jpa_ActiveRecord {
    
    @PersistenceContext
    transient EntityManager AutoTaskDefinition.entityManager;
    
    @Transactional
    public void AutoTaskDefinition.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional
    public void AutoTaskDefinition.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            AutoTaskDefinition attached = AutoTaskDefinition.findAutoTaskDefinition(this.id);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void AutoTaskDefinition.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void AutoTaskDefinition.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public AutoTaskDefinition AutoTaskDefinition.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        AutoTaskDefinition merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
    public static final EntityManager AutoTaskDefinition.entityManager() {
        EntityManager em = new AutoTaskDefinition().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long AutoTaskDefinition.countAutoTaskDefinitions() {
        return entityManager().createQuery("SELECT COUNT(o) FROM AutoTaskDefinition o", Long.class).getSingleResult();
    }
    
    public static List<AutoTaskDefinition> AutoTaskDefinition.findAllAutoTaskDefinitions() {
        return entityManager().createQuery("SELECT o FROM AutoTaskDefinition o", AutoTaskDefinition.class).getResultList();
    }
    
    public static AutoTaskDefinition AutoTaskDefinition.findAutoTaskDefinition(java.lang.Long id) {
        if (id == null) return null;
        return entityManager().find(AutoTaskDefinition.class, id);
    }
    
    public static List<AutoTaskDefinition> AutoTaskDefinition.findAutoTaskDefinitionEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM AutoTaskDefinition o", AutoTaskDefinition.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
